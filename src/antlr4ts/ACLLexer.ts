// Generated from ./src/antlr4ts/ACL.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ACLLexer extends Lexer {
	public static readonly CLASS = 1;
	public static readonly COMPONENT = 2;
	public static readonly EXTENSION = 3;
	public static readonly CUTSCENE = 4;
	public static readonly FUNCTION = 5;
	public static readonly COROUTINE = 6;
	public static readonly WHILE = 7;
	public static readonly FOR = 8;
	public static readonly IN = 9;
	public static readonly IF = 10;
	public static readonly ELIF = 11;
	public static readonly ELSE = 12;
	public static readonly WAIT = 13;
	public static readonly RETURN = 14;
	public static readonly BREAK = 15;
	public static readonly CONTINUE = 16;
	public static readonly ID = 17;
	public static readonly PRIVATE = 18;
	public static readonly SELF = 19;
	public static readonly DOT = 20;
	public static readonly ASSIGN = 21;
	public static readonly SEMI = 22;
	public static readonly COMMA = 23;
	public static readonly NUMBER = 24;
	public static readonly FLOAT = 25;
	public static readonly STRING = 26;
	public static readonly BOOL = 27;
	public static readonly NULL = 28;
	public static readonly PLUS = 29;
	public static readonly MINUS = 30;
	public static readonly MULTIPLY = 31;
	public static readonly DIVIDE = 32;
	public static readonly PLUS_ASSIGN = 33;
	public static readonly MINUS_ASSIGN = 34;
	public static readonly MULTIPLY_ASSIGN = 35;
	public static readonly DIVIDE_ASSIGN = 36;
	public static readonly EQUALS = 37;
	public static readonly NOT_EQUALS = 38;
	public static readonly LESS = 39;
	public static readonly LESS_EQUAL = 40;
	public static readonly GREATER = 41;
	public static readonly GREATER_EQUAL = 42;
	public static readonly AND = 43;
	public static readonly OR = 44;
	public static readonly NOT = 45;
	public static readonly LBRACE = 46;
	public static readonly RBRACE = 47;
	public static readonly LPAREN = 48;
	public static readonly RPAREN = 49;
	public static readonly WS = 50;
	public static readonly ANNOTATION_COMMENT = 51;
	public static readonly ANNOTATION_BLOCK_COMMENT = 52;
	public static readonly COMMENT = 53;
	public static readonly BLOCK_COMMENT = 54;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"CLASS", "COMPONENT", "EXTENSION", "CUTSCENE", "FUNCTION", "COROUTINE", 
		"WHILE", "FOR", "IN", "IF", "ELIF", "ELSE", "WAIT", "RETURN", "BREAK", 
		"CONTINUE", "ID", "PRIVATE", "SELF", "DOT", "ASSIGN", "SEMI", "COMMA", 
		"NUMBER", "FLOAT", "STRING", "BOOL", "NULL", "PLUS", "MINUS", "MULTIPLY", 
		"DIVIDE", "PLUS_ASSIGN", "MINUS_ASSIGN", "MULTIPLY_ASSIGN", "DIVIDE_ASSIGN", 
		"EQUALS", "NOT_EQUALS", "LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", 
		"AND", "OR", "NOT", "LBRACE", "RBRACE", "LPAREN", "RPAREN", "WS", "ANNOTATION_COMMENT", 
		"ANNOTATION_BLOCK_COMMENT", "COMMENT", "BLOCK_COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'class'", "'component'", "'extension'", "'cutscene'", "'function'", 
		"'coroutine'", "'while'", "'for'", "'in'", "'if'", "'elif'", "'else'", 
		"'wait'", "'return'", "'break'", "'continue'", undefined, "'_'", "'self'", 
		"'.'", "'='", "';'", "','", undefined, undefined, undefined, undefined, 
		"'null'", "'+'", "'-'", "'*'", "'/'", "'+='", "'-='", "'*='", "'/='", 
		"'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'", "'||'", "'!'", "'{'", 
		"'}'", "'('", "')'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "CLASS", "COMPONENT", "EXTENSION", "CUTSCENE", "FUNCTION", 
		"COROUTINE", "WHILE", "FOR", "IN", "IF", "ELIF", "ELSE", "WAIT", "RETURN", 
		"BREAK", "CONTINUE", "ID", "PRIVATE", "SELF", "DOT", "ASSIGN", "SEMI", 
		"COMMA", "NUMBER", "FLOAT", "STRING", "BOOL", "NULL", "PLUS", "MINUS", 
		"MULTIPLY", "DIVIDE", "PLUS_ASSIGN", "MINUS_ASSIGN", "MULTIPLY_ASSIGN", 
		"DIVIDE_ASSIGN", "EQUALS", "NOT_EQUALS", "LESS", "LESS_EQUAL", "GREATER", 
		"GREATER_EQUAL", "AND", "OR", "NOT", "LBRACE", "RBRACE", "LPAREN", "RPAREN", 
		"WS", "ANNOTATION_COMMENT", "ANNOTATION_BLOCK_COMMENT", "COMMENT", "BLOCK_COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ACLLexer._LITERAL_NAMES, ACLLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ACLLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ACLLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "ACL.g4"; }

	// @Override
	public get ruleNames(): string[] { return ACLLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ACLLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ACLLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ACLLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x028\u018E\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t" +
		"\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x07\x12\xDD" +
		"\n\x12\f\x12\x0E\x12\xE0\v\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18" +
		"\x03\x18\x03\x19\x06\x19\xF2\n\x19\r\x19\x0E\x19\xF3\x03\x1A\x06\x1A\xF7" +
		"\n\x1A\r\x1A\x0E\x1A\xF8\x03\x1A\x03\x1A\x06\x1A\xFD\n\x1A\r\x1A\x0E\x1A" +
		"\xFE\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x07\x1B\u0105\n\x1B\f\x1B\x0E\x1B" +
		"\u0108\v\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03" +
		"\x1C\x03\x1C\x03\x1C\x03\x1C\x05\x1C\u0115\n\x1C\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03" +
		"\"\x03\"\x03\"\x03#\x03#\x03#\x03$\x03$\x03$\x03%\x03%\x03%\x03&\x03&" +
		"\x03&\x03\'\x03\'\x03\'\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03+\x03+\x03" +
		"+\x03,\x03,\x03,\x03-\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x031\x03" +
		"1\x032\x032\x033\x063\u0151\n3\r3\x0E3\u0152\x033\x033\x034\x034\x074" +
		"\u0159\n4\f4\x0E4\u015C\v4\x034\x034\x074\u0160\n4\f4\x0E4\u0163\v4\x03" +
		"5\x035\x035\x035\x075\u0169\n5\f5\x0E5\u016C\v5\x035\x035\x075\u0170\n" +
		"5\f5\x0E5\u0173\v5\x035\x035\x035\x036\x036\x076\u017A\n6\f6\x0E6\u017D" +
		"\v6\x036\x036\x037\x037\x037\x037\x077\u0185\n7\f7\x0E7\u0188\v7\x037" +
		"\x037\x037\x037\x037\x05\u016A\u0171\u0186\x02\x028\x03\x02\x03\x05\x02" +
		"\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02" +
		"\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11" +
		"!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02" +
		"\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02" +
		"!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02," +
		"W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x02" +
		"8\x03\x02\b\x05\x02C\\aac|\x06\x022;C\\aac|\x03\x022;\x04\x02$$^^\x05" +
		"\x02\v\f\x0F\x0F\"\"\x04\x02\f\f\x0F\x0F\x02\u019B\x02\x03\x03\x02\x02" +
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
		"\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
		"\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
		"\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)" +
		"\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
		"\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02" +
		"K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02" +
		"\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02" +
		"\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03" +
		"\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02" +
		"\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02" +
		"m\x03\x02\x02\x02\x03o\x03\x02\x02\x02\x05u\x03\x02\x02\x02\x07\x7F\x03" +
		"\x02\x02\x02\t\x89\x03\x02\x02\x02\v\x92\x03\x02\x02\x02\r\x9B\x03\x02" +
		"\x02\x02\x0F\xA5\x03\x02\x02\x02\x11\xAB\x03\x02\x02\x02\x13\xAF\x03\x02" +
		"\x02\x02\x15\xB2\x03\x02\x02\x02\x17\xB5\x03\x02\x02\x02\x19\xBA\x03\x02" +
		"\x02\x02\x1B\xBF\x03\x02\x02\x02\x1D\xC4\x03\x02\x02\x02\x1F\xCB\x03\x02" +
		"\x02\x02!\xD1\x03\x02\x02\x02#\xDA\x03\x02\x02\x02%\xE1\x03\x02\x02\x02" +
		"\'\xE3\x03\x02\x02\x02)\xE8\x03\x02\x02\x02+\xEA\x03\x02\x02\x02-\xEC" +
		"\x03\x02\x02\x02/\xEE\x03\x02\x02\x021\xF1\x03\x02\x02\x023\xF6\x03\x02" +
		"\x02\x025\u0100\x03\x02\x02\x027\u0114\x03\x02\x02\x029\u0116\x03\x02" +
		"\x02\x02;\u011B\x03\x02\x02\x02=\u011D\x03\x02\x02\x02?\u011F\x03\x02" +
		"\x02\x02A\u0121\x03\x02\x02\x02C\u0123\x03\x02\x02\x02E\u0126\x03\x02" +
		"\x02\x02G\u0129\x03\x02\x02\x02I\u012C\x03\x02\x02\x02K\u012F\x03\x02" +
		"\x02\x02M\u0132\x03\x02\x02\x02O\u0135\x03\x02\x02\x02Q\u0137\x03\x02" +
		"\x02\x02S\u013A\x03\x02\x02\x02U\u013C\x03\x02\x02\x02W\u013F\x03\x02" +
		"\x02\x02Y\u0142\x03\x02\x02\x02[\u0145\x03\x02\x02\x02]\u0147\x03\x02" +
		"\x02\x02_\u0149\x03\x02\x02\x02a\u014B\x03\x02\x02\x02c\u014D\x03\x02" +
		"\x02\x02e\u0150\x03\x02\x02\x02g\u0156\x03\x02\x02\x02i\u0164\x03\x02" +
		"\x02\x02k\u0177\x03\x02\x02\x02m\u0180\x03\x02\x02\x02op\x07e\x02\x02" +
		"pq\x07n\x02\x02qr\x07c\x02\x02rs\x07u\x02\x02st\x07u\x02\x02t\x04\x03" +
		"\x02\x02\x02uv\x07e\x02\x02vw\x07q\x02\x02wx\x07o\x02\x02xy\x07r\x02\x02" +
		"yz\x07q\x02\x02z{\x07p\x02\x02{|\x07g\x02\x02|}\x07p\x02\x02}~\x07v\x02" +
		"\x02~\x06\x03\x02\x02\x02\x7F\x80\x07g\x02\x02\x80\x81\x07z\x02\x02\x81" +
		"\x82\x07v\x02\x02\x82\x83\x07g\x02\x02\x83\x84\x07p\x02\x02\x84\x85\x07" +
		"u\x02\x02\x85\x86\x07k\x02\x02\x86\x87\x07q\x02\x02\x87\x88\x07p\x02\x02" +
		"\x88\b\x03\x02\x02\x02\x89\x8A\x07e\x02\x02\x8A\x8B\x07w\x02\x02\x8B\x8C" +
		"\x07v\x02\x02\x8C\x8D\x07u\x02\x02\x8D\x8E\x07e\x02\x02\x8E\x8F\x07g\x02" +
		"\x02\x8F\x90\x07p\x02\x02\x90\x91\x07g\x02\x02\x91\n\x03\x02\x02\x02\x92" +
		"\x93\x07h\x02\x02\x93\x94\x07w\x02\x02\x94\x95\x07p\x02\x02\x95\x96\x07" +
		"e\x02\x02\x96\x97\x07v\x02\x02\x97\x98\x07k\x02\x02\x98\x99\x07q\x02\x02" +
		"\x99\x9A\x07p\x02\x02\x9A\f\x03\x02\x02\x02\x9B\x9C\x07e\x02\x02\x9C\x9D" +
		"\x07q\x02\x02\x9D\x9E\x07t\x02\x02\x9E\x9F\x07q\x02\x02\x9F\xA0\x07w\x02" +
		"\x02\xA0\xA1\x07v\x02\x02\xA1\xA2\x07k\x02\x02\xA2\xA3\x07p\x02\x02\xA3" +
		"\xA4\x07g\x02\x02\xA4\x0E\x03\x02\x02\x02\xA5\xA6\x07y\x02\x02\xA6\xA7" +
		"\x07j\x02\x02\xA7\xA8\x07k\x02\x02\xA8\xA9\x07n\x02\x02\xA9\xAA\x07g\x02" +
		"\x02\xAA\x10\x03\x02\x02\x02\xAB\xAC\x07h\x02\x02\xAC\xAD\x07q\x02\x02" +
		"\xAD\xAE\x07t\x02\x02\xAE\x12\x03\x02\x02\x02\xAF\xB0\x07k\x02\x02\xB0" +
		"\xB1\x07p\x02\x02\xB1\x14\x03\x02\x02\x02\xB2\xB3\x07k\x02\x02\xB3\xB4" +
		"\x07h\x02\x02\xB4\x16\x03\x02\x02\x02\xB5\xB6\x07g\x02\x02\xB6\xB7\x07" +
		"n\x02\x02\xB7\xB8\x07k\x02\x02\xB8\xB9\x07h\x02\x02\xB9\x18\x03\x02\x02" +
		"\x02\xBA\xBB\x07g\x02\x02\xBB\xBC\x07n\x02\x02\xBC\xBD\x07u\x02\x02\xBD" +
		"\xBE\x07g\x02\x02\xBE\x1A\x03\x02\x02\x02\xBF\xC0\x07y\x02\x02\xC0\xC1" +
		"\x07c\x02\x02\xC1\xC2\x07k\x02\x02\xC2\xC3\x07v\x02\x02\xC3\x1C\x03\x02" +
		"\x02\x02\xC4\xC5\x07t\x02\x02\xC5\xC6\x07g\x02\x02\xC6\xC7\x07v\x02\x02" +
		"\xC7\xC8\x07w\x02\x02\xC8\xC9\x07t\x02\x02\xC9\xCA\x07p\x02\x02\xCA\x1E" +
		"\x03\x02\x02\x02\xCB\xCC\x07d\x02\x02\xCC\xCD\x07t\x02\x02\xCD\xCE\x07" +
		"g\x02\x02\xCE\xCF\x07c\x02\x02\xCF\xD0\x07m\x02\x02\xD0 \x03\x02\x02\x02" +
		"\xD1\xD2\x07e\x02\x02\xD2\xD3\x07q\x02\x02\xD3\xD4\x07p\x02\x02\xD4\xD5" +
		"\x07v\x02\x02\xD5\xD6\x07k\x02\x02\xD6\xD7\x07p\x02\x02\xD7\xD8\x07w\x02" +
		"\x02\xD8\xD9\x07g\x02\x02\xD9\"\x03\x02\x02\x02\xDA\xDE\t\x02\x02\x02" +
		"\xDB\xDD\t\x03\x02\x02\xDC\xDB\x03\x02\x02\x02\xDD\xE0\x03\x02\x02\x02" +
		"\xDE\xDC\x03\x02\x02\x02\xDE\xDF\x03\x02\x02\x02\xDF$\x03\x02\x02\x02" +
		"\xE0\xDE\x03\x02\x02\x02\xE1\xE2\x07a\x02\x02\xE2&\x03\x02\x02\x02\xE3" +
		"\xE4\x07u\x02\x02\xE4\xE5\x07g\x02\x02\xE5\xE6\x07n\x02\x02\xE6\xE7\x07" +
		"h\x02\x02\xE7(\x03\x02\x02\x02\xE8\xE9\x070\x02\x02\xE9*\x03\x02\x02\x02" +
		"\xEA\xEB\x07?\x02\x02\xEB,\x03\x02\x02\x02\xEC\xED\x07=\x02\x02\xED.\x03" +
		"\x02\x02\x02\xEE\xEF\x07.\x02\x02\xEF0\x03\x02\x02\x02\xF0\xF2\t\x04\x02" +
		"\x02\xF1\xF0\x03\x02\x02\x02\xF2\xF3\x03\x02\x02\x02\xF3\xF1\x03\x02\x02" +
		"\x02\xF3\xF4\x03\x02\x02\x02\xF42\x03\x02\x02\x02\xF5\xF7\t\x04\x02\x02" +
		"\xF6\xF5\x03\x02\x02\x02\xF7\xF8\x03\x02\x02\x02\xF8\xF6\x03\x02\x02\x02" +
		"\xF8\xF9\x03\x02\x02\x02\xF9\xFA\x03\x02\x02\x02\xFA\xFC\x070\x02\x02" +
		"\xFB\xFD\t\x04\x02\x02\xFC\xFB\x03\x02\x02\x02\xFD\xFE\x03\x02\x02\x02" +
		"\xFE\xFC\x03\x02\x02\x02\xFE\xFF\x03\x02\x02\x02\xFF4\x03\x02\x02\x02" +
		"\u0100\u0106\x07$\x02\x02\u0101\u0105\n\x05\x02\x02\u0102\u0103\x07^\x02" +
		"\x02\u0103\u0105\v\x02\x02\x02\u0104\u0101\x03\x02\x02\x02\u0104\u0102" +
		"\x03\x02\x02\x02\u0105\u0108\x03\x02\x02\x02\u0106\u0104\x03\x02\x02\x02" +
		"\u0106\u0107\x03\x02\x02\x02\u0107\u0109\x03\x02\x02\x02\u0108\u0106\x03" +
		"\x02\x02\x02\u0109\u010A\x07$\x02\x02\u010A6\x03\x02\x02\x02\u010B\u010C" +
		"\x07v\x02\x02\u010C\u010D\x07t\x02\x02\u010D\u010E\x07w\x02\x02\u010E" +
		"\u0115\x07g\x02\x02\u010F\u0110\x07h\x02\x02\u0110\u0111\x07c\x02\x02" +
		"\u0111\u0112\x07n\x02\x02\u0112\u0113\x07u\x02\x02\u0113\u0115\x07g\x02" +
		"\x02\u0114\u010B\x03\x02\x02\x02\u0114\u010F\x03\x02\x02\x02\u01158\x03" +
		"\x02\x02\x02\u0116\u0117\x07p\x02\x02\u0117\u0118\x07w\x02\x02\u0118\u0119" +
		"\x07n\x02\x02\u0119\u011A\x07n\x02\x02\u011A:\x03\x02\x02\x02\u011B\u011C" +
		"\x07-\x02\x02\u011C<\x03\x02\x02\x02\u011D\u011E\x07/\x02\x02\u011E>\x03" +
		"\x02\x02\x02\u011F\u0120\x07,\x02\x02\u0120@\x03\x02\x02\x02\u0121\u0122" +
		"\x071\x02\x02\u0122B\x03\x02\x02\x02\u0123\u0124\x07-\x02\x02\u0124\u0125" +
		"\x07?\x02\x02\u0125D\x03\x02\x02\x02\u0126\u0127\x07/\x02\x02\u0127\u0128" +
		"\x07?\x02\x02\u0128F\x03\x02\x02\x02\u0129\u012A\x07,\x02\x02\u012A\u012B" +
		"\x07?\x02\x02\u012BH\x03\x02\x02\x02\u012C\u012D\x071\x02\x02\u012D\u012E" +
		"\x07?\x02\x02\u012EJ\x03\x02\x02\x02\u012F\u0130\x07?\x02\x02\u0130\u0131" +
		"\x07?\x02\x02\u0131L\x03\x02\x02\x02\u0132\u0133\x07#\x02\x02\u0133\u0134" +
		"\x07?\x02\x02\u0134N\x03\x02\x02\x02\u0135\u0136\x07>\x02\x02\u0136P\x03" +
		"\x02\x02\x02\u0137\u0138\x07>\x02\x02\u0138\u0139\x07?\x02\x02\u0139R" +
		"\x03\x02\x02\x02\u013A\u013B\x07@\x02\x02\u013BT\x03\x02\x02\x02\u013C" +
		"\u013D\x07@\x02\x02\u013D\u013E\x07?\x02\x02\u013EV\x03\x02\x02\x02\u013F" +
		"\u0140\x07(\x02\x02\u0140\u0141\x07(\x02\x02\u0141X\x03\x02\x02\x02\u0142" +
		"\u0143\x07~\x02\x02\u0143\u0144\x07~\x02\x02\u0144Z\x03\x02\x02\x02\u0145" +
		"\u0146\x07#\x02\x02\u0146\\\x03\x02\x02\x02\u0147\u0148\x07}\x02\x02\u0148" +
		"^\x03\x02\x02\x02\u0149\u014A\x07\x7F\x02\x02\u014A`\x03\x02\x02\x02\u014B" +
		"\u014C\x07*\x02\x02\u014Cb\x03\x02\x02\x02\u014D\u014E\x07+\x02\x02\u014E" +
		"d\x03\x02\x02\x02\u014F\u0151\t\x06\x02\x02\u0150\u014F\x03\x02\x02\x02" +
		"\u0151\u0152\x03\x02\x02\x02\u0152\u0150\x03\x02\x02\x02\u0152\u0153\x03" +
		"\x02\x02\x02\u0153\u0154\x03\x02\x02\x02\u0154\u0155\b3\x02\x02\u0155" +
		"f\x03\x02\x02\x02\u0156\u015A\x07%\x02\x02\u0157\u0159\x05e3\x02\u0158" +
		"\u0157\x03\x02\x02\x02\u0159\u015C\x03\x02\x02\x02\u015A\u0158\x03\x02" +
		"\x02\x02\u015A\u015B\x03\x02\x02\x02\u015B\u015D\x03\x02\x02\x02\u015C" +
		"\u015A\x03\x02\x02\x02\u015D\u0161\x07B\x02\x02\u015E\u0160\n\x07\x02" +
		"\x02\u015F\u015E\x03\x02\x02\x02\u0160\u0163\x03\x02\x02\x02\u0161\u015F" +
		"\x03\x02\x02\x02\u0161\u0162\x03\x02\x02\x02\u0162h\x03\x02\x02\x02\u0163" +
		"\u0161\x03\x02\x02\x02\u0164\u0165\x071\x02\x02\u0165\u0166\x07,\x02\x02" +
		"\u0166\u016A\x03\x02\x02\x02\u0167\u0169\v\x02\x02\x02\u0168\u0167\x03" +
		"\x02\x02\x02\u0169\u016C\x03\x02\x02\x02\u016A\u016B\x03\x02\x02\x02\u016A" +
		"\u0168\x03\x02\x02\x02\u016B\u016D\x03\x02\x02\x02\u016C\u016A\x03\x02" +
		"\x02\x02\u016D\u0171\x07B\x02\x02\u016E\u0170\v\x02\x02\x02\u016F\u016E" +
		"\x03\x02\x02\x02\u0170\u0173\x03\x02\x02\x02\u0171\u0172\x03\x02\x02\x02" +
		"\u0171\u016F\x03\x02\x02\x02\u0172\u0174\x03\x02\x02\x02\u0173\u0171\x03" +
		"\x02\x02\x02\u0174\u0175\x07,\x02\x02\u0175\u0176\x071\x02\x02\u0176j" +
		"\x03\x02\x02\x02\u0177\u017B\x07%\x02\x02\u0178\u017A\n\x07\x02\x02\u0179" +
		"\u0178\x03\x02\x02\x02\u017A\u017D\x03\x02\x02\x02\u017B\u0179\x03\x02" +
		"\x02\x02\u017B\u017C\x03\x02\x02\x02\u017C\u017E\x03\x02\x02\x02\u017D" +
		"\u017B\x03\x02\x02\x02\u017E\u017F\b6\x02\x02\u017Fl\x03\x02\x02\x02\u0180" +
		"\u0181\x071\x02\x02\u0181\u0182\x07,\x02\x02\u0182\u0186\x03\x02\x02\x02" +
		"\u0183\u0185\v\x02\x02\x02\u0184\u0183\x03\x02\x02\x02\u0185\u0188\x03" +
		"\x02\x02\x02\u0186\u0187\x03\x02\x02\x02\u0186\u0184\x03\x02\x02\x02\u0187" +
		"\u0189\x03\x02\x02\x02\u0188\u0186\x03\x02\x02\x02\u0189\u018A\x07,\x02" +
		"\x02\u018A\u018B\x071\x02\x02\u018B\u018C\x03\x02\x02\x02\u018C\u018D" +
		"\b7\x02\x02\u018Dn\x03\x02\x02\x02\x11\x02\xDE\xF3\xF8\xFE\u0104\u0106" +
		"\u0114\u0152\u015A\u0161\u016A\u0171\u017B\u0186\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ACLLexer.__ATN) {
			ACLLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ACLLexer._serializedATN));
		}

		return ACLLexer.__ATN;
	}

}

